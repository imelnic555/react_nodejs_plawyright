name: CI Pipeline

on:
  push:
    branches:
      - fetaure/setup_project  # Retaining the original branch name as specified

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23
          cache: 'npm'

      - name: Install frontend dependencies
        run: |
          cd frontend
          # Remove old lockfiles and modules
          rm -rf node_modules package-lock.json
          # Install base dependencies
          npm install
          # Ensure react, react-dom, and react-router-dom are installed
          npm install react react-dom react-router-dom
          # Ensure TypeScript and necessary type definitions are installed
          npm install --save-dev typescript @types/react @types/react-dom @types/react-router-dom
          # Verify tsconfig.json settings
          if [ ! -f tsconfig.json ]; then
            echo '{
              "compilerOptions": {
                "jsx": "react-jsx",
                "moduleResolution": "node",
                "strict": true
              }
            }' > tsconfig.json
          else
            if ! grep -q '"jsx": "react-jsx"' tsconfig.json; then
              echo 'Please ensure your tsconfig.json has "jsx": "react-jsx" under compilerOptions.'
            fi
          fi

      - name: Install backend dependencies
        run: |
          cd backend
          rm -rf node_modules package-lock.json dist
          npm install

  build_frontend:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23
          cache: 'npm'

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  build_backend:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23
          cache: 'npm'

      - name: Build backend
        run: |
          cd backend
          npm run build

  run_cucumber_tests:
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23
          cache: 'npm'

      - name: Run Cucumber tests
        run: |
          echo "Running Cucumber tests..."
          node -v

          cd tests
          npm install
          ls -l node_modules/ || echo "❌ node_modules missing!"
          ls -l support/ || echo "❌ world.ts missing!"

          cd ../backend
          echo "Starting backend..."
          npm run start > backend.log 2>&1 & echo $! > backend_pid
          sleep 5
          cat backend.log

          cd ../frontend
          echo "Starting frontend..."
          npm run dev > frontend.log 2>&1 & echo $! > frontend_pid
          cd ../tests

          sleep 5
          curl -I http://localhost:3000 || echo "❌ Backend is NOT running!"
          curl -I http://localhost:5173 || echo "❌ Frontend is NOT running!"

          timeout 60 npx wait-on http://localhost:3000 http://localhost:5173

          npx playwright install --with-deps
          npx cucumber-js --import tsx

          echo "Stopping backend..."
          kill $(cat ../backend/backend_pid) || echo "❌ Failed to stop backend!"
          echo "Stopping frontend..."
          kill $(cat ../frontend/frontend_pid) || echo "❌ Failed to stop frontend!"
